# Copyright 2022 JanusGraph Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: CI Benchmark

on:
  push:
    paths-ignore:
    - 'docs/**'
    - '.github/workflows/ci-docs.yml'
    - 'requirements.txt'
    - 'mkdocs.yml'
    - 'docs.Dockerfile'
    - '*.md'
    branches-ignore:
      - 'dependabot/**'

env:
  BUILD_MAVEN_OPTS: "-DskipTests=true --batch-mode --also-make"

permissions:
  contents: write

jobs:
  build-all:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: actions/setup-java@v4
        with:
          java-version: 8
          distribution: zulu
      - run: mvn clean install --projects janusgraph-all -Pjanusgraph-cache -Dmaven.javadoc.skip=true ${{ env.BUILD_MAVEN_OPTS }}
      - run: mvn verify --projects janusgraph-all -Pjanusgraph-cache ${{ env.VERIFY_MAVEN_OPTS }}
  benchmark:
    name: Performance regression check
    runs-on: ubuntu-latest
    needs: build-all
    steps:
      # install CCM for CQL benchmarks
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - run: pip install git+https://github.com/li-boxuan/ccm.git

      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: actions/setup-java@v4
        with:
          java-version: 8
          distribution: zulu
      - run: mvn clean install -Pjanusgraph-benchmark ${{ env.BUILD_MAVEN_OPTS }} -Dgpg.skip=true
      - run: mvn verify --projects janusgraph-benchmark
        env:
          CCM_CLUSTER_START_DEFAULT_TIMEOUT: 300
          CCM_UPDATE_PID_DEFAULT_TIMEOUT: 300

      # Download previous benchmark result from cache (if exists)
      - name: Download previous benchmark data
        uses: actions/cache@v3
        with:
          path: ./cache
          key: ${{ runner.os }}-benchmark

      # Run `github-action-benchmark` action
      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: 'customSmallerIsBetter'
          output-file-path: janusgraph-benchmark/benchmark.json
          external-data-json-path: ./cache/benchmark-data.json
          fail-on-alert: false
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-on-alert: true
          comment-always: true