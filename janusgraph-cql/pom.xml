<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.janusgraph</groupId>
        <artifactId>janusgraph</artifactId>
        <version>0.5.0-SNAPSHOT</version>
    </parent>

    <artifactId>janusgraph-cql</artifactId>
    <name>JanusGraph-CQL: Distributed Graph Database</name>
    <url>https://janusgraph.org</url>

    <properties>
        <vavr.version>0.9.0</vavr.version>
        <test.byteordered>byteordered</test.byteordered>
        <test.murmur>murmur</test.murmur>
        <test.javaagent.opts>-javaagent:${com.github.jbellis:jamm:jar}</test.javaagent.opts>
        <test.extra.jvm.opts>${test.javaagent.opts}</test.extra.jvm.opts>
        <test.jvm.opts>-Xms256m -Xmx1280m -ea -XX:+HeapDumpOnOutOfMemoryError ${test.extra.jvm.opts}</test.jvm.opts>
        <test.excluded.groups>MEMORY_TESTS,PERFORMANCE_TESTS,BRITTLE_TESTS</test.excluded.groups>
        <top.level.basedir>${basedir}/..</top.level.basedir>
        <test.docker.version.cassandra2>2.2.14</test.docker.version.cassandra2>
        <test.docker.version.cassandra3>3.11.4</test.docker.version.cassandra3>
    </properties>

    <dependencies>
        <!-- Compile Dependencies -->
        <dependency>
            <groupId>org.janusgraph</groupId>
            <artifactId>janusgraph-core</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.datastax.cassandra</groupId>
            <artifactId>cassandra-driver-core</artifactId>
            <version>${cassandra-driver.version}</version>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-handler</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>io.vavr</groupId>
            <artifactId>vavr</artifactId>
            <version>${vavr.version}</version>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.janusgraph</groupId>
            <artifactId>janusgraph-test</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.jbellis</groupId>
            <artifactId>jamm</artifactId>
            <version>${jamm.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- JNA is needed by Cassandra, but janusgraph-cassandra only defines it as an optional dependency. -->
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna</artifactId>
            <version>${jna.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>cassandra</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>set-dependency-properties</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>properties</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludedGroups>${test.cql.excludes}</excludedGroups>
                    <groups />
                    <argLine>${test.jvm.opts}</argLine>
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                    <parallel>none</parallel>
                    <perCoreThreadCount>false</perCoreThreadCount>
                    <threadCount>1</threadCount>
                    <systemPropertyVariables>
                        <log4j.configuration>file:${project.build.testOutputDirectory}/log4j.properties</log4j.configuration>
                        <cassandra.docker.image>${cassandra.docker.image}</cassandra.docker.image>
                        <cassandra.docker.version>${cassandra.docker.version}</cassandra.docker.version>
                        <cassandra.docker.partitioner>${cassandra.docker.partitioner}</cassandra.docker.partitioner>
                        <cassandra.docker.useSSL>${cassandra.docker.useSSL}</cassandra.docker.useSSL>
                        <cassandra.docker.useDefaultConfigFromImage>${cassandra.docker.useDefaultConfigFromImage}</cassandra.docker.useDefaultConfigFromImage>
                    </systemPropertyVariables>
                </configuration>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>cql-test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <phase>test</phase>
                    </execution>
                    <execution>
                        <id>${test.murmur}-serial-test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <excludedGroups />
                            <groups>SERIAL_TESTS</groups>
                            <parallel>none</parallel>
                            <perCoreThreadCount>false</perCoreThreadCount>
                            <threadCount>1</threadCount>
                            <runOrder>alphabetical</runOrder>
                            <skip>${test.skip.murmur-serial}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>pack-test-jar</id>
                        <!-- prepare-package instead of package forces it to get signed -->
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
	        <id>coverage</id>
	        <activation>
	            <activeByDefault>false</activeByDefault>
	        </activation>
	        <properties>
	            <test.extra.jvm.opts>${jacoco.opts} ${test.javaagent.opts}</test.extra.jvm.opts>
	        </properties>
        </profile>

        <profile>
            <id>cassandra2-byteordered</id>
	        <activation>
	            <activeByDefault>false</activeByDefault>
	        </activation>
            <properties>
                <cassandra.docker.version>${test.docker.version.cassandra2}</cassandra.docker.version>
                <cassandra.docker.partitioner>${test.byteordered}</cassandra.docker.partitioner>
                <test.skip.murmur-serial>true</test.skip.murmur-serial>
                <test.cql.excludes>${test.excluded.groups},SERIAL_TESTS</test.cql.excludes>
            </properties>
        </profile>
        <profile>
            <id>cassandra2-murmur</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <cassandra.docker.version>${test.docker.version.cassandra2}</cassandra.docker.version>
                <cassandra.docker.partitioner>${test.murmur}</cassandra.docker.partitioner>
                <test.skip.murmur-serial>false</test.skip.murmur-serial>
                <test.cql.excludes>${test.excluded.groups},SERIAL_TESTS</test.cql.excludes>
            </properties>
        </profile>
        <profile>
            <id>cassandra2-murmur-ssl</id>
	        <activation>
	            <activeByDefault>false</activeByDefault>
	        </activation>
            <properties>
                <cassandra.docker.version>${test.docker.version.cassandra2}</cassandra.docker.version>
                <cassandra.docker.partitioner>${test.murmur}</cassandra.docker.partitioner>
                <cassandra.docker.useSSL>true</cassandra.docker.useSSL>
                <test.skip.murmur-serial>false</test.skip.murmur-serial>
                <test.cql.excludes>${test.excluded.groups},SERIAL_TESTS</test.cql.excludes>
            </properties>
        </profile>

        <profile>
            <id>cassandra3-byteordered</id>
	        <activation>
	            <activeByDefault>false</activeByDefault>
	        </activation>
            <properties>
                <cassandra.docker.version>${test.docker.version.cassandra3}</cassandra.docker.version>
                <cassandra.docker.partitioner>${test.byteordered}</cassandra.docker.partitioner>
                <test.skip.murmur-serial>true</test.skip.murmur-serial>
                <test.cql.excludes>${test.excluded.groups},SERIAL_TESTS</test.cql.excludes>
            </properties>
        </profile>
        <profile>
            <id>cassandra3-murmur</id>
	        <activation>
	            <activeByDefault>false</activeByDefault>
	        </activation>
            <properties>
                <cassandra.docker.version>${test.docker.version.cassandra3}</cassandra.docker.version>
                <cassandra.docker.partitioner>${test.murmur}</cassandra.docker.partitioner>
                <test.skip.murmur-serial>false</test.skip.murmur-serial>
                <test.cql.excludes>${test.excluded.groups},SERIAL_TESTS</test.cql.excludes>
            </properties>
        </profile>
        <profile>
            <id>cassandra3-murmur-ssl</id>
	        <activation>
	            <activeByDefault>false</activeByDefault>
	        </activation>
            <properties>
                <cassandra.docker.version>${test.docker.version.cassandra3}</cassandra.docker.version>
                <cassandra.docker.partitioner>${test.murmur}</cassandra.docker.partitioner>
                <cassandra.docker.useSSL>true</cassandra.docker.useSSL>
                <test.skip.murmur-serial>false</test.skip.murmur-serial>
                <test.cql.excludes>${test.excluded.groups},SERIAL_TESTS</test.cql.excludes>
            </properties>
        </profile>

        <profile>
            <id>scylladb</id>
            <properties>
                <cassandra.docker.version>3.0.9</cassandra.docker.version>
                <cassandra.docker.image>scylladb/scylla</cassandra.docker.image>
                <cassandra.docker.useDefaultConfigFromImage>true</cassandra.docker.useDefaultConfigFromImage>
                <test.skip.byteordered>true</test.skip.byteordered>
                <test.skip.murmur>true</test.skip.murmur>
                <test.skip.murmur-serial>true</test.skip.murmur-serial>
                <test.skip.murmur-ssl>true</test.skip.murmur-ssl>
            </properties>
        </profile>
    </profiles>
</project>
