<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.janusgraph</groupId>
        <artifactId>janusgraph</artifactId>
        <version>0.3.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <packaging>pom</packaging>
    <artifactId>janusgraph-dist</artifactId>
    <name>JanusGraph-Dist: Tar and Zip Archives</name>
    <url>http://janusgraph.org</url>

    <properties>
        <top.level.basedir>${project.basedir}/..</top.level.basedir>

        <!-- Zipfile/Tarfile assembly source paths -->
        <assembly.txtfile.dir>${top.level.basedir}</assembly.txtfile.dir>
        <assembly.cfilter.in.dir>${project.basedir}/src/assembly/cfilter</assembly.cfilter.in.dir>
        <assembly.cfilter.out.dir>${project.build.directory}/cfilter</assembly.cfilter.out.dir>
        <assembly.descriptor.dir>${project.basedir}/src/assembly/descriptor</assembly.descriptor.dir>
        <assembly.es.dir>${project.build.directory}/elasticsearch-${elasticsearch.version}</assembly.es.dir>

        <!-- Variables for integration testing on release-candidate archive files -->
        <test.expect.dir>${project.build.directory}/test-classes</test.expect.dir>
        <test.zipfile.path>${project.build.directory}/janusgraph-${project.version}-${hadoop.version.tag}.zip</test.zipfile.path>

        <!-- AsciiDoc -->
        <asciidoc.input.dir>${project.parent.basedir}/docs</asciidoc.input.dir>
        <xsl.input.dir>${project.parent.basedir}/docs/xsl</xsl.input.dir>
        <asciidoc.output.dir>${project.basedir}/target/docs</asciidoc.output.dir>
        <xsl.output.dir>${asciidoc.output.dir}/xsl</xsl.output.dir>
        <docbook.output.dir>${project.basedir}/target/docs/docbook</docbook.output.dir>
        <htmlsingle.output.dir>${project.basedir}/target/docs/single</htmlsingle.output.dir>
        <htmlchunk.output.dir>${project.basedir}/target/docs/chunk</htmlchunk.output.dir>

        <!-- RPM/DEB packaging -->
        <pkg.release>1</pkg.release>
        <pkgtools.dir>${project.basedir}/..</pkgtools.dir>

        <skipDefaultDistroIT>${it.skip}</skipDefaultDistroIT>
        <docker.maven.version>0.4.13</docker.maven.version>
    </properties>

    <modules>
        <module>janusgraph-dist-hadoop-2</module>
    </modules>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>janusgraph-all</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna</artifactId>
            <version>${jna.version}</version>
        </dependency>
        <!-- C*2.1 uses airline for command line parsing (incl. nodetool).
             This dep is not provided through cassandra-all/janusgraph-cassandra. -->
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>airline</artifactId>
            <version>0.6</version>
        </dependency>
        <dependency>
            <groupId>org.apache.tinkerpop</groupId>
            <artifactId>gremlin-console</artifactId>
            <version>${tinkerpop.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.tinkerpop</groupId>
            <artifactId>hadoop-gremlin</artifactId>
            <version>${tinkerpop.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.tinkerpop</groupId>
            <artifactId>spark-gremlin</artifactId>
            <version>${tinkerpop.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.eclipse.jetty.orbit</groupId>
                    <artifactId>javax.servlet</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.tinkerpop</groupId>
            <artifactId>gremlin-server</artifactId>
            <version>${tinkerpop.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.tinkerpop</groupId>
            <artifactId>gremlin-groovy</artifactId>
            <version>${tinkerpop.version}</version>
        </dependency>
        <!-- Test dependencies -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>janusgraph-test</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>janusgraph-hbase-core</artifactId>
            <version>${project.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>janusgraph-es</artifactId>
            <version>${project.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.elasticsearch.distribution.zip</groupId>
            <artifactId>elasticsearch</artifactId>
            <version>${elasticsearch.version}</version>
            <type>zip</type>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.elasticsearch</groupId>
                    <artifactId>elasticsearch</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>net.java.dev.jna</groupId>
                    <artifactId>jna</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>janusgraph-solr</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>solr-core</artifactId>
                    <groupId>org.apache.solr</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>janusgraph-cassandra</artifactId>
            <version>${project.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>1.7</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-plugins</id>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <phase>generate-test-resources</phase>
                        <configuration>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <includeGroupIds>org.elasticsearch.distribution.zip</includeGroupIds>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--
                Filter the files in src/release during the
                process-resources phase. Disable default resource goal
                bindings because we have no main or test resources.
            -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <inherited>false</inherited>
                <executions>
                    <execution>
                        <id>default-resources</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>default-testResources</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>filter-doc-sources-and-xsl</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${asciidoc.output.dir}</outputDirectory>
                            <delimiters>
                                <delimiter>$MAVEN{*}</delimiter>
                            </delimiters>
                            <resources>
                                <resource>
                                    <directory>${asciidoc.input.dir}</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-static-assets-to-htmlsingle</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <inherited>false</inherited>
                        <configuration>
                            <outputDirectory>${htmlsingle.output.dir}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${asciidoc.input.dir}/static</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-static-assets-to-htmlchunk</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <inherited>false</inherited>
                        <configuration>
                            <outputDirectory>${htmlchunk.output.dir}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${asciidoc.input.dir}/static</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <inherited>false</inherited>
                <executions>
                    <execution>
                        <id>generate-janusgraph-config-table</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>org.janusgraph.util.system.ConfigurationPrinter</mainClass>
                            <arguments>
                                <argument>org.janusgraph.graphdb.configuration.GraphDatabaseConfiguration.ROOT_NS</argument>
                                <argument>${asciidoc.output.dir}/listings/janusgraph_cfg.adoc</argument>
                                <argument>true</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>run-cfilter</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>java</executable>
                            <arguments>
                                <!-- Classpath -->
                                <argument>-classpath</argument>
                                <classpath />
                                <!-- Main Classname -->
                                <mainClass>org.janusgraph.util.system.ConfigurationFileFilter</mainClass>
                                <!-- Input directory (processed recursively) -->
                                <argument>${assembly.cfilter.in.dir}</argument>
                                <!-- Output directory prefix -->
                                <argument>${assembly.cfilter.out.dir}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-janusgraph-gremlin-imports</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <inherited>false</inherited>
                <executions>
                    <execution>
                        <id>asciidoc-to-docbook</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <sourceDirectory>${asciidoc.output.dir}</sourceDirectory>
                            <sourceDocumentName>index.adoc</sourceDocumentName>
                            <outputDirectory>${docbook.output.dir}</outputDirectory>
                            <backend>docbook5</backend>
                            <doctype>book</doctype>
                            <attributes>
                                <encoding>UTF-8</encoding>
                                <iconsdir>images/icons</iconsdir>
                                <imagesdir>images</imagesdir>
                                <toc>true</toc>
                            </attributes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-install-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-install</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-deploy</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>xml-maven-plugin</artifactId>
                <inherited>false</inherited>
                <executions>
                    <execution>
                        <id>docbook-to-htmlsingle</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>transform</goal>
                        </goals>
                        <inherited>false</inherited>
                        <configuration>
                            <forceCreation>true</forceCreation>
                            <transformationSets>
                                <transformationSet>
                                    <dir>${docbook.output.dir}</dir>
                                    <outputDir>${htmlsingle.output.dir}</outputDir>
                                    <includes>
                                        <include>index.xml</include>
                                    </includes>
                                    <stylesheet>${xsl.output.dir}/single.xsl</stylesheet>
                                    <fileMappers>
                                        <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                            <targetExtension>.html</targetExtension>
                                        </fileMapper>
                                    </fileMappers>
                                </transformationSet>
                            </transformationSets>
                        </configuration>
                    </execution>
                    <execution>
                        <id>docbook-to-htmlchunk</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>transform</goal>
                        </goals>
                        <inherited>false</inherited>
                        <configuration>
                            <forceCreation>true</forceCreation>
                            <transformationSets>
                                <transformationSet>
                                    <dir>${docbook.output.dir}</dir>
                                    <includes>
                                        <include>index.xml</include>
                                    </includes>
                                    <stylesheet>${xsl.output.dir}/chunk.xsl</stylesheet>
                                    <fileMappers>
                                        <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                            <targetExtension>.html</targetExtension>
                                        </fileMapper>
                                    </fileMappers>
                                </transformationSet>
                            </transformationSets>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>net.sf.xslthl</groupId>
                        <artifactId>xslthl</artifactId>
                        <version>2.1.0</version>
                    </dependency>
                    <dependency>
                        <groupId>saxon</groupId>
                        <artifactId>saxon</artifactId>
                        <version>6.5.3</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <execution>
                        <id>compile-tests</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

    </build>

    <profiles>
        <profile>
            <id>pkg-tools</id>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>1.8</version>
                        <inherited>false</inherited>
                        <executions>
                            <execution>
                                <id>set-version-properties</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>parse-version</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <inherited>false</inherited>
                        <executions>
                            <execution>
                                <id>assemble-package-tools</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <attach>false</attach>
                                    <outputDirectory>${pkgtools.dir}/</outputDirectory>
                                    <finalName>/</finalName>
                                    <appendAssemblyId>false</appendAssemblyId>
                                    <descriptors>
                                        <descriptor>${assembly.descriptor.dir}/pkgtools.xml</descriptor>
                                    </descriptors>
                                </configuration>
                            </execution>
                            <execution>
                                <id>assemble-distribution-archive</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <inherited>false</inherited>
                        <executions>
                            <execution>
                                <id>clean-package-tools</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                                <configuration>
                                    <excludeDefaultDirectories>true</excludeDefaultDirectories>
                                    <filesets>
                                        <fileset>
                                            <directory>${pkgtools.dir}/debian/</directory>
                                        </fileset>
                                        <fileset>
                                            <directory>${pkgtools.dir}/pkgcommon/</directory>
                                        </fileset>
                                        <fileset>
                                            <directory>${pkgtools.dir}/redhat/</directory>
                                        </fileset>
                                    </filesets>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>janusgraph-docker</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>com.spotify</groupId>
                            <artifactId>docker-maven-plugin</artifactId>
                            <version>${docker.maven.version}</version>
                            <configuration>
                                <dockerDirectory>${project.basedir}/janusgraph-dist-hadoop-2</dockerDirectory>
                                <buildArgs>
                                    <server_zip>target/janusgraph-${project.version}-hadoop2.zip</server_zip>
                                </buildArgs>
                                <forceTags>true</forceTags>
                                <imageName>janusgraph/server</imageName>
                                <imageTags>
                                    <imageTag>${project.version}</imageTag>
                                </imageTags>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>

        <profile>
            <id>janusgraph-release</id>

            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>janusgraph-core</artifactId>
                    <version>${project.version}</version>
                    <classifier>javadoc</classifier>
                </dependency>
            </dependencies>

            <build>

                <pluginManagement>
                    <plugins>
                        <plugin>
                            <artifactId>maven-assembly-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>assemble-distribution-archive</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>single</goal>
                                    </goals>
                                    <configuration>
                                        <!--
                                            We set attached=true so that the gpg plugin will
                                            sign all of our assembly artifacts. We handle
                                            deployment of the artifacts manually because
                                            maven-deploy-plugin can't upload files to a flat
                                            S3 directory; it insists on creating a
                                            long/packagename/and/artifactid/and/version/
                                            path at the destination before uploading, and we
                                            don't want that for our files S3. codehaus's
                                            wagon:upload plugin comes to our rescue.
                                        -->
                                        <attach>true</attach>
                                        <!--
                                            archive filenames are of the form
                                            ${finalName}-${<id /> from assembly descriptor}.${archive
                                            format extension}
                                        -->
                                        <finalName>janusgraph-${project.version}-${hadoop.version.tag}</finalName>
                                        <appendAssemblyId>false</appendAssemblyId>
                                        <tarLongFileMode>gnu</tarLongFileMode>
                                        <descriptors>
                                            <descriptor>${assembly.descriptor.dir}/archive.xml</descriptor>
                                        </descriptors>
                                        <formats>
                                            <format>zip</format>
                                        </formats>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>

                        <plugin>
                            <artifactId>maven-gpg-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>sign-artifacts</id>
                                </execution>
                            </executions>
                        </plugin>

                        <plugin>
                            <artifactId>maven-jar-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>pack-test-jar</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>test-jar</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>

                        <plugin>
                            <artifactId>maven-compiler-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>compile-tests</id>
                                    <phase>test-compile</phase>
                                    <goals>
                                        <goal>testCompile</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>

                        <plugin>
                            <artifactId>maven-resources-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>filter-cassandra-murmur-config</id>
                                    <phase>none</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/cassandra/conf/localhost-murmur</outputDirectory>
                                        <filters>
                                            <filter>${top.level.basedir}/janusgraph-cassandra/config/cassandra-filters/localhost-murmur.properties</filter>
                                        </filters>
                                        <resources>
                                            <resource>
                                                <directory>${top.level.basedir}/janusgraph-cassandra/config/cassandra</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>filter-cassandra-bop-config</id>
                                    <phase>none</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/cassandra/conf/localhost-bop</outputDirectory>
                                        <filters>
                                            <filter>${top.level.basedir}/janusgraph-cassandra/config/cassandra-filters/localhost-bop.properties</filter>
                                        </filters>
                                        <resources>
                                            <resource>
                                                <directory>${top.level.basedir}/janusgraph-cassandra/config/cassandra</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>filter-expect-scripts</id>
                                    <phase>none</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <resources>
                                            <resource>
                                                <directory>${top.level.basedir}/janusgraph-dist/src/test/expect</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                        <outputDirectory>${project.build.directory}/test-classes</outputDirectory>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>filter-test-resources</id>
                                    <phase>none</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <resources>
                                            <resource>
                                                <directory>${top.level.basedir}/janusgraph-dist/src/test/resources</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                        <outputDirectory>${project.build.testOutputDirectory}</outputDirectory>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>copy-test-cfiles</id>
                                    <phase>none</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <resources>
                                            <resource>
                                                <directory>${assembly.cfilter.out.dir}</directory>
                                                <filtering>false</filtering>
                                            </resource>
                                        </resources>
                                        <outputDirectory>${project.build.directory}</outputDirectory>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>

                        <plugin>
                            <artifactId>maven-failsafe-plugin</artifactId>
                            <configuration>
                                <forkCount>1</forkCount>
                                <reuseForks>false</reuseForks>
                                <testClassesDirectory>${top.level.basedir}/janusgraph-dist/target/test-classes</testClassesDirectory>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>integration-test</id>
                                    <phase>integration-test</phase>
                                    <goals>
                                        <goal>integration-test</goal>
                                    </goals>
                                    <configuration>
                                        <excludedGroups>org.janusgraph.testcategory.OrderedKeyStoreTests,org.janusgraph.testcategory.UnorderedKeyStoreTests</excludedGroups>
                                        <skip>${skipDefaultDistroIT}</skip>
                                        <failIfNoTests>false</failIfNoTests>
                                        <excludes>
                                            <exclude>**/*HBase*IT.java</exclude>
                                            <exclude>**/*Cassandra*IT.java</exclude>
                                            <exclude>**/*CompatIT.java</exclude>
                                        </excludes>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>cassandra-murmur-integration-test</id>
                                    <phase>integration-test</phase>
                                    <goals>
                                        <goal>integration-test</goal>
                                    </goals>
                                    <configuration>
                                        <argLine>-Dtest.cassandra.confdir=${project.build.directory}/cassandra/conf/localhost-murmur -Dtest.cassandra.datadir=${project.build.directory}/cassandra/data/localhost-murmur</argLine>
                                        <excludedGroups>org.janusgraph.testcategory.OrderedKeyStoreTests</excludedGroups>
                                        <reportNameSuffix>murmur</reportNameSuffix>
                                        <failIfNoTests>false</failIfNoTests>
                                        <includes>
                                            <include>**/*Cassandra*IT.java</include>
                                        </includes>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>cassandra-bop-integration-test</id>
                                    <phase>integration-test</phase>
                                    <goals>
                                        <goal>integration-test</goal>
                                    </goals>
                                    <configuration>
                                        <argLine>-Dtest.cassandra.confdir=${project.build.directory}/cassandra/conf/localhost-bop -Dtest.cassandra.datadir=${project.build.directory}/cassandra/data/localhost-bop</argLine>
                                        <excludedGroups>org.janusgraph.testcategory.UnorderedKeyStoreTests</excludedGroups>
                                        <reportNameSuffix>bop</reportNameSuffix>
                                        <failIfNoTests>false</failIfNoTests>
                                        <includes>
                                            <include>**/*Cassandra*IT.java</include>
                                        </includes>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>hbase-integration-test</id>
                                    <phase>integration-test</phase>
                                    <goals>
                                        <goal>integration-test</goal>
                                    </goals>
                                    <configuration>
                                        <argLine>-Dtest.hbase.parentdir=${top.level.basedir}/janusgraph-hbase-parent/</argLine>
                                        <reportNameSuffix>hbase</reportNameSuffix>
                                        <failIfNoTests>false</failIfNoTests>
                                        <includes>
                                            <include>**/*HBase*IT.java</include>
                                        </includes>
                                    </configuration>
                                </execution>
                                <!-- Commented until the first 0.9/1.0 release
                                <execution>
                                    <id>version-compat-integration-test</id>
                                    <phase>integration-test</phase>
                                    <goals>
                                        <goal>integration-test</goal>
                                    </goals>
                                    <configuration>
                                        <reportNameSuffix>compat</reportNameSuffix>
                                        <failIfNoTests>false</failIfNoTests>
                                        <skip>${skipCompatITs}</skip>
                                        <includes>
                                            <include>**/*CompatIT.java</include>
                                        </includes>
                                    </configuration>
                                </execution>
                                -->
                                <execution>
                                    <id>verify</id>
                                    <phase>verify</phase>
                                    <goals>
                                        <goal>verify</goal>
                                    </goals>
                                    <configuration>
                                        <failIfNoTests>true</failIfNoTests>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <plugins>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <inherited>false</inherited>
                        <executions>
                            <execution>
                                <id>filter-release-resources</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/release</outputDirectory>
                                    <useDefaultDelimiters>false</useDefaultDelimiters>
                                    <delimiters>
                                        <delimiter>$MAVEN{*}</delimiter>
                                    </delimiters>
                                    <resources>
                                        <resource>
                                            <directory>src/release</directory>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!--
                        We use maven-resources-plugin to filter src/release,
                        but that plugin has an open bug about the fact that it
                        doesn't copy file permissions during filtering. Make
                        the script executable with chmod. Not portable.

                        Bug: http://jira.codehaus.org/browse/MRESOURCES-132
                    -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <inherited>false</inherited>
                        <executions>
                            <execution>
                                <id>fix-script-permissions</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>chmod</executable>
                                    <arguments>
                                        <argument>-R</argument>
                                        <argument>ug+x</argument>
                                        <argument>${project.build.directory}/release/</argument>
                                    </arguments>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <inherited>false</inherited>
                        <executions>
                            <execution>
                                <id>unpack-janusgraph-core-javadocs</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <attach>false</attach>
                                    <finalName>javadocs</finalName>
                                    <appendAssemblyId>false</appendAssemblyId>
                                    <descriptors>
                                        <descriptor>${assembly.descriptor.dir}/javadocs.xml</descriptor>
                                    </descriptors>
                                </configuration>
                            </execution>

                            <execution>
                                <id>assemble-distribution-archive</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- gpg must follow assembly.
                         Both plugins run in the package phase, so only <plugin> ordering
                         ensures that signing happens after assembly file generation.
                         Hence this vacuous stanza down here. -->
                    <plugin>
                        <artifactId>maven-gpg-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
