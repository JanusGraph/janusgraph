#!/usr/bin/env expect
# Copyright 2021 JanusGraph Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License

set timeout 30

spawn bin/gremlin.sh
expect_after {
    timeout {
        # Default timeout handler
        exit 1
    }
}
expect gremlin>
send "g = JanusGraphFactory.open(\"${graphConfig}\")\r"
expect -re "${graphToString}"
expect gremlin>
send "g.getBackend().clearStorage()\r"
expect gremlin>
send "g = JanusGraphFactory.open(\"${graphConfig}\")\r"
expect gremlin>
send "v = g.addVertex()\r"
expect -re {v\[(\d+)\]} { set vertexid $expect_out(1,string) }
expect gremlin>
send "v.property('test', 42)\r"
expect "vp\[test->42\]"
expect gremlin>
send "g.tx().commit()\r"
sleep 10
expect gremlin>
send "g.close()\r"
expect gremlin>
send "graph = GraphFactory.open(\"${sparkGraphConfig}\")\r"
expect -re "hadoopgraph"
expect gremlin>
send "g = graph.traversal().withComputer(SparkGraphComputer)\r"
expect gremlin>
send "g.V(v.longId()).values('test')\r"
expect "42"
expect gremlin>
send "g.V().count()\r"
expect "1"
expect gremlin>
send "graph.close()\r"
expect gremlin>
exit 0
