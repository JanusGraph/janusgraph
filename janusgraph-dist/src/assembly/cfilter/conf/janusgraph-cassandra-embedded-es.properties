# Titan configuration sample: embedded Cassandra & Elasticsearch
#
# This file starts a Cassandra daemon and an Elasticsearch daemon
# inside the same JVM running Titan.  The daemons are started
# automatically.  This is sometimes convenient for testing.  Large
# production deployments typically opt to provision and configure
# these services separately instead of embedding as shown in this
# file.
#
# The embedded Cassandra backend is not officially publicly supported.
# The cassandrathrift and astyanax backends -- which connect to
# Cassandra over its Thrift API -- are supported alternatives.w

#TITANCFG{storage.backend=embeddedcassandra}

#TITANCFG{storage.conf-file=cassandra/cassandra.yaml}

#TITANCFG{cache.db-cache = true}

#TITANCFG{cache.db-cache-clean-wait = 0}

#TITANCFG{cache.db-cache-time = 0}

#TITANCFG{cache.db-cache-size = 0.25}

#TITANCFG{index.search.backend=elasticsearch}

#TITANCFG{index.search.directory=../db/es}

#TITANCFG{index.search.elasticsearch.client-only=false}

#TITANCFG{index.search.elasticsearch.local-mode=true}

# Or connect to an already-running ES process on localhost
#index.search.backend=elasticsearch
#index.search.hostname=127.0.0.1
#index.search.elasticsearch.client-only=true
