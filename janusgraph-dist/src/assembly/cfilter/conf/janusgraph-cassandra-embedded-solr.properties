# Titan configuration sample: embedded Cassandra & External Solr
#
# This file starts a Cassandra daemon inside the same JVM running Titan and
# connects to Solr services running on localhost using the Solr HTTP API.
# The Cassandra daemon is started automatically. This is sometimes convenient
# for testing. Large production deployments typically opt to provision and
# configure these services separately instead of embedding as shown in this
# file.
#
# The embedded Cassandra backend is not officially publicly supported.
# The cassandrathrift and astyanax backends -- which connect to
# Cassandra over its Thrift API -- are supported alternatives.


#TITANCFG{storage.backend=embeddedcassandra}

#TITANCFG{storage.conf-file=cassandra/cassandra.yaml}

#TITANCFG{cache.db-cache = true}

#TITANCFG{cache.db-cache-clean-wait = 0}

#TITANCFG{cache.db-cache-time = 0}

#TITANCFG{cache.db-cache-size = 0.25}

# Configure a Solr backend named "search" at localhost:8983
# and path prefix /solr/titan.solr1.
# The collection must already exist -- see the manual for info.

#TITANCFG{index.search.backend=solr}

#TITANCFG{index.search.solr.mode=http}

#TITANCFG{index.search.solr.http-urls=http://localhost:8983/solr}

