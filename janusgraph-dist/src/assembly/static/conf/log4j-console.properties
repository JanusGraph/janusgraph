# Used by gremlin.sh

log4j.appender.A2=org.apache.log4j.ConsoleAppender
log4j.appender.A2.Threshold=TRACE
log4j.appender.A2.layout=org.apache.log4j.PatternLayout
log4j.appender.A2.layout.ConversionPattern=%d{HH:mm:ss} %-5p %c %x - %m%n

log4j.rootLogger=${gremlin.log4j.level}, A2

#log4j.logger.org.janusgraph.graphdb.database.idassigner.placement=DEBUG
#log4j.logger.org.janusgraph.diskstorage.hbase.HBaseStoreManager=DEBUG

# Disable spurious Hadoop config deprecation warnings under 2.2.0.
#
# See https://issues.apache.org/jira/browse/HADOOP-10178
#
# This can and should be deleted when we upgrade our Hadoop 2.2.0
# dependency to 2.3.0 or 3.0.0.
log4j.logger.org.apache.hadoop.conf.Configuration.deprecation=OFF

# Configure MR at its own loglevel.  We usually want MR at INFO,
# even if the rest of the loggers are at WARN or ERROR or FATAL,
# because job progress information is at INFO.
log4j.logger.org.apache.hadoop.mapred=${gremlin.mr.log4j.level}
log4j.logger.org.apache.hadoop.mapreduce=${gremlin.mr.log4j.level}

# This generates 3 INFO lines per jar on the classpath -- usually more
# noise than desirable in the REPL.  Switching it to the default
# log4j level means it will be at WARN by default, which is ideal.
log4j.logger.org.apache.hadoop.mapred.LocalDistributedCacheManager=${gremlin.log4j.level}
