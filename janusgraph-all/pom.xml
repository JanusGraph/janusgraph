<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.janusgraph</groupId>
        <artifactId>janusgraph</artifactId>
        <version>0.6.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <artifactId>janusgraph-all</artifactId>
    <name>JanusGraph-All: Complete JanusGraph Distribution</name>
    <url>https://janusgraph.org</url>

    <!--
      This project depends on the rest of JanusGraph, so Maven users and
      users of tools that can parse Maven pom.xml dependencies can
      depend on this artifact and have the rest of the JanusGraph artifacts
      pulled in automatically.  The JAR doesn't contain anything
      besides some redundant properties files.
    -->

    <properties>
        <top.level.basedir>${basedir}/..</top.level.basedir>
        <default-test.phase>none</default-test.phase>
        <default-testResources.phase>none</default-testResources.phase>
        <default-testCompile.phase>none</default-testCompile.phase>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.janusgraph</groupId>
            <artifactId>janusgraph-driver</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.janusgraph</groupId>
            <artifactId>janusgraph-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.janusgraph</groupId>
            <artifactId>janusgraph-server</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.janusgraph</groupId>
            <artifactId>janusgraph-inmemory</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.janusgraph</groupId>
            <artifactId>janusgraph-cql</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.janusgraph</groupId>
            <artifactId>janusgraph-berkeleyje</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.janusgraph</groupId>
            <artifactId>janusgraph-hbase</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.janusgraph</groupId>
            <artifactId>janusgraph-bigtable</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.janusgraph</groupId>
            <artifactId>janusgraph-hadoop</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.janusgraph</groupId>
            <artifactId>janusgraph-es</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.janusgraph</groupId>
            <artifactId>janusgraph-solr</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.janusgraph</groupId>
            <artifactId>janusgraph-lucene</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- Override Jackson versions in our transitive dependencies.
             Without these dependencies, janusgraph-all users can end up with
             1.9 + 1.8 jars together, and this leads to linkage errors.
             It might be a better idea to dependencyManagement imports if your Maven version supports it:
             https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Importing_Dependencies -->
        <!-- Jackson 1.x -->
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>${jackson1.version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-core-asl</artifactId>
            <version>${jackson1.version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-xc</artifactId>
            <version>${jackson1.version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-jaxrs</artifactId>
            <version>${jackson1.version}</version>
        </dependency>
 
        <!-- Jackson 2.x -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson2.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson2.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-json-org</artifactId>
            <version>${jackson2.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson2.version}</version>
        </dependency>
    </dependencies>

    <build>
        <directory>${basedir}/target</directory>
        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <!-- Disable unused plugins -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-testResources</id>
                        <phase>${default-testResources.phase}</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <phase>${default-test.phase}</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-testCompile</id>
                        <phase>${default-testCompile.phase}</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Done disabling unnecessary plugins -->
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>janusgraph-cache</id>
	        <properties>
                <default-test.phase>test</default-test.phase>
                <default-testCompile.phase>test-compile</default-testCompile.phase>
                <default-testResources.phase>process-test-resources</default-testResources.phase>
            </properties>
            <dependencies>
                <!-- Logging backends. -->
                <!-- Enforce a classpath ordering constraint to ensure log4j is used for logging. -->
                <dependency>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                    <optional>true</optional>
                </dependency>
                <dependency>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-classic</artifactId>
                </dependency>
                <!-- End logging backends. -->
                <dependency>
                    <groupId>org.janusgraph</groupId>
                    <artifactId>janusgraph-backend-testutils</artifactId>
                    <version>${project.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.janusgraph</groupId>
                    <artifactId>janusgraph-inmemory</artifactId>
                    <version>${project.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-sources-for-jacoco</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/jacoco-sources</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>../janusgraph-core/src/main/java/</directory>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>hbase1</id>
            <dependencies>
                <dependency>
                    <groupId>org.apache.hbase</groupId>
                    <artifactId>hbase-shaded-client</artifactId>
                    <version>${hbase1.version}</version>
                    <exclusions>
                        <exclusion>
                            <groupId>junit</groupId>
                            <artifactId>junit</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <groupId>org.apache.hbase</groupId>
                    <artifactId>hbase-shaded-server</artifactId>
                    <version>${hbase1.version}</version>
                    <exclusions>
                        <exclusion>
                            <groupId>junit</groupId>
                            <artifactId>junit</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>hbase2</id>
            <activation>
                <property>
                    <name>!hbase.profile</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.apache.hbase</groupId>
                    <artifactId>hbase-shaded-client</artifactId>
                    <version>${hbase2.version}</version>
                    <exclusions>
                        <exclusion>
                            <groupId>junit</groupId>
                            <artifactId>junit</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <groupId>org.apache.hbase</groupId>
                    <artifactId>hbase-shaded-mapreduce</artifactId>
                    <version>${hbase2.version}</version>
                    <exclusions>
                        <exclusion>
                            <groupId>junit</groupId>
                            <artifactId>junit</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>
