<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.janusgraph</groupId>
        <artifactId>janusgraph</artifactId>
        <version>0.3.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <artifactId>janusgraph-es</artifactId>
    <name>JanusGraph-ElasticSearch: Distributed Indexing Support</name>
    <url>http://janusgraph.org</url>
    <properties>
        <top.level.basedir>${basedir}/..</top.level.basedir>
        <elasticsearch1.test.version>1.7.6</elasticsearch1.test.version>
        <elasticsearch2.test.version>2.4.6</elasticsearch2.test.version>
        <elasticsearch5.test.version>5.6.5</elasticsearch5.test.version>
        <elasticsearch6.test.version>6.0.1</elasticsearch6.test.version>
        <elasticsearch.test.version>${elasticsearch6.test.version}</elasticsearch.test.version>
        <!-- Enabling Groovy dynamic scripting is not required from ES 5.x -->
        <elasticsearch.test.groovy.inline />
        <skip.es.test>${skipTests}</skip.es.test>
        <es.docker.image>docker.elastic.co/elasticsearch/elasticsearch</es.docker.image>
        <elasticsearch.docker.test.version>${elasticsearch.test.version}</elasticsearch.docker.test.version>
        <powermock.version>1.7.3</powermock.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.janusgraph</groupId>
            <artifactId>janusgraph-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.janusgraph</groupId>
            <artifactId>janusgraph-test</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.janusgraph</groupId>
            <artifactId>janusgraph-berkeleyje</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.janusgraph</groupId>
            <artifactId>janusgraph-berkeleyje</artifactId>
            <version>${project.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.janusgraph</groupId>
            <artifactId>janusgraph-cassandra</artifactId>
            <version>${project.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.janusgraph</groupId>
            <artifactId>janusgraph-cassandra</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.elasticsearch.client</groupId>
            <artifactId>elasticsearch-rest-client</artifactId>
            <version>${elasticsearch.version}</version>
        </dependency>
        <dependency>
            <groupId>org.elasticsearch.distribution.zip</groupId>
            <artifactId>elasticsearch</artifactId>
            <version>${elasticsearch.test.version}</version>
            <scope>test</scope>
            <type>zip</type>
            <exclusions>
                <exclusion>
                    <groupId>org.elasticsearch</groupId>
                    <artifactId>elasticsearch</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>net.java.dev.jna</groupId>
                    <artifactId>jna</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr-runtime</artifactId>
            <version>${antlr.version}</version>
        </dependency>

        <!-- Logging backends.
             Enforce a classpath ordering constraint to ensure log4j is used for logging.
             See comment in janusgraph-cassandra POM for more information. -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <!-- End logging backends. -->

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-core</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-reflect</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <testResources>
            <testResource>
                <directory>${basedir}/src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>pack-test-jar</id>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>filter-es-config</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/elasticsearch-${elasticsearch.test.version}/config</outputDirectory>
                            <delimiters>
                                <delimiter>$MAVEN{*}</delimiter>
                            </delimiters>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/test/config</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>filter-cassandra-murmur-config</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/cassandra/conf/localhost-murmur</outputDirectory>
                            <filters>
                                <filter>${top.level.basedir}/janusgraph-cassandra/config/cassandra-filters/localhost-murmur.properties</filter>
                            </filters>
                            <resources>
                                <resource>
                                    <directory>${top.level.basedir}/janusgraph-cassandra/config/cassandra</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <!-- Unpack Elasticsearch distribution for testing. -->
                    <execution>
                        <id>unpack-plugins</id>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <phase>generate-test-resources</phase>
                        <configuration>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <includeGroupIds>org.elasticsearch.distribution.zip</includeGroupIds>
                            <scope>test</scope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <executions>
                    <execution>
                        <id>clean-es-files</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                            <filesets>
                                <fileset>
                                    <directory>bin/</directory>
                                </fileset>
                                <fileset>
                                    <directory>config/</directory>
                                </fileset>
                            </filesets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>

                <executions>
                    <execution>
                        <id>default-test</id>
                        <configuration>
                            <argLine>${default.test.jvm.opts} -Dtest.cassandra.confdir=${project.build.directory}/cassandra/conf/localhost-murmur -Dtest.cassandra.datadir=${project.build.directory}/cassandra/data/localhost-murmur</argLine>
                            <skipTests>${skip.es.test}</skipTests>
                        </configuration>
                    </execution>

                    <!--
                    <execution>
                        <id>es-cassandra-test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <argLine>-Dtest.cassandra.confdir=${project.build.directory}/cassandra/conf/localhost-murmur -Dtest.cassandra.datadir=${project.build.directory}/cassandra/data/localhost-murmur</argLine>
                            <includes>
                                <include>**/ThriftElasticsearchTest.java</include>
                            </includes>
                            <reuseForks>false</reuseForks>
                        </configuration>
                    </execution>

                    <execution>
                        <id>default-test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <excludes>
                                <exclude>**/ThriftElasticsearchTest.java</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                    -->
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>elasticsearch1</id>
            <properties>
                <!-- Testing with Elasticsearch 1.x requires Docker (es-docker profile). -->
                <elasticsearch.docker.test.version>${elasticsearch1.test.version}</elasticsearch.docker.test.version>
                <es.docker.image>elasticsearch</es.docker.image>
                <!-- Groovy dynamic scripting must be enabled when testing on ES 1.x/2.x servers -->
                <elasticsearch.test.groovy.inline>script.engine.groovy.inline.update: true</elasticsearch.test.groovy.inline>
                <!-- Test version below used to unpack distribution artifact is irrelevant when testing with Docker -->
                <elasticsearch.test.version>${elasticsearch2.test.version}</elasticsearch.test.version>
            </properties>
        </profile>
        <profile>
            <id>elasticsearch2</id>
            <properties>
                <elasticsearch.test.version>${elasticsearch2.test.version}</elasticsearch.test.version>
                <!-- Groovy dynamic scripting must be enabled when testing on ES 1.x/2.x servers -->
                <elasticsearch.test.groovy.inline>script.engine.groovy.inline.update: true</elasticsearch.test.groovy.inline>
                <es.docker.image>elasticsearch</es.docker.image>
            </properties>
        </profile>
        <profile>
            <id>elasticsearch5</id>
            <properties>
                <elasticsearch.test.version>${elasticsearch5.test.version}</elasticsearch.test.version>
                <!-- Enabling Groovy dynamic scripting is not required from ES 5.x -->
                <elasticsearch.test.groovy.inline />
            </properties>
        </profile>
        <profile>
            <id>elasticsearch6</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <elasticsearch.test.version>${elasticsearch6.test.version}</elasticsearch.test.version>
                <!-- Enabling Groovy dynamic scripting is not required from ES 5.x -->
                <elasticsearch.test.groovy.inline />
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-test</id>
                                <configuration>
                                    <argLine>${default.test.jvm.opts} -Dtest.cassandra.confdir=${project.build.directory}/cassandra/conf/localhost-murmur -Dtest.cassandra.datadir=${project.build.directory}/cassandra/data/localhost-murmur</argLine>
                                    <skipTests>${skip.es.test}</skipTests>
                                    <excludes>
                                        <exclude>**/ElasticSearchMultiTypeIndexTest.java</exclude>
                                    </excludes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Redeclare gpg-plugin at the bottom to ensure it runs after all the other packaging goals -->
        <profile>
            <id>janusgraph-release</id>

            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-gpg-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- Run tests with Elasticsearch Docker container -->
            <id>es-docker</id>
            <properties>
                <skip.es.test>true</skip.es.test>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <skipITs>false</skipITs>
                            <argLine>${default.test.jvm.opts} -Dtest.cassandra.confdir=${project.build.directory}/cassandra/conf/localhost-murmur -Dtest.cassandra.datadir=${project.build.directory}/cassandra/data/localhost-murmur</argLine>
                            <includes>
                                <include>**/org/janusgraph/diskstorage/es/*.java</include>
                            </includes>
                            <systemProperties>
                                <property>
                                    <name>index.search.hostname</name>
                                    <value>0.0.0.0</value>
                                </property>
                                <property>
                                    <name>log4j.configuration</name>
                                    <value>file:${project.build.directory}/test-classes/log4j.properties</value>
                                </property>
                            </systemProperties>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.18.1</version>
                        <configuration>
                            <images>
                                <image>
                                    <alias>elasticsearch</alias>
                                    <name>${es.docker.image}:${elasticsearch.docker.test.version}</name>
                                    <run>
                                        <ports>
                                            <port>9200:9200</port>
                                        </ports>
                                        <volumes>
                                            <bind>
                                                <volume>${project.build.directory}/elasticsearch-${elasticsearch.test.version}/config/elasticsearch.docker.yml:/usr/share/elasticsearch/config/elasticsearch.yml</volume>
                                            </bind>
                                        </volumes>
                                        <env>
                                            <ES_JAVA_OPTS>-Xms512m -Xmx512m</ES_JAVA_OPTS>
                                            <http.host>0.0.0.0</http.host>
                                            <transport.host>127.0.0.1</transport.host>
                                        </env>
                                        <wait>
                                            <http>
                                                <url>http://localhost:9200</url>
                                                <method>GET</method>
                                                <status>200..399</status>
                                            </http>
                                            <time>60000</time>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>docker-start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>docker-stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                    <goal>remove</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
